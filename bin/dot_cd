#! /usr/bin/env python3
"""Add a .cd file to a directory"""

import os
import re
import sys

from pysyte.cli.arguments import ArgumentsNamespace
from pysyte.cli.main import run


def add_args(parser):
    """Handle arguments from the command line"""
    parser.positional('directory', help='The directory to touch')
    parser.boolean('-p', '--python', help='Add Python commands')


def templates():
    dirname = os.path.dirname
    project_dir = dirname(dirname(__file__))
    return os.path.join(project_dir, 'templates')


def template_names():
    return os.listdir(templates())


def template(name):
    return os.path.join(templates, name)


def read_old_args():
    args = ArgumentsNamespace()
    if not os.path.isfile('.cd'):
        return args
    with open('.cd') as stream:
        for line in stream.readlines():
            match = re.match('^## ([a-z]+)$', line)
            if match:
                setattr(args, match.group(1), True)
    return args


def arg_templates(args):
    texts = []
    for name in template_names():
        if getattr(args, name, False):
            with open(template) as stream:
                data = stream.read()
                text = '\n## {name}\n\n{data}'
                texts.append(text)
    return '\n'.join(texts)


def main(new_args):
    old_args = read_old_args()
    try:
        os.chdir(new_args.directory)
    except OSError:
        sys.stderr.write('Could not cd to %r' % str(new_args.directory))
        return 1
    with open('.cd', 'w') as stream:
        stream.write(arg_templates(new_args))
    return 0


run(main, add_args)
